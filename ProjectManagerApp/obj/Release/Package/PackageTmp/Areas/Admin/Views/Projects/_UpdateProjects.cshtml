@model ProjectManagerApp.Areas.Admin.Models.Project

@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "frmProjects" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ClientName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ClientName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ClientName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
    

                    @Html.DropDownList("Status", new SelectList(new List<Object> {
                                                                                  new { value="True",text="Active" },
                                                                                  new { value="False", text="Inactive"}
                                                                                  }, "value", "text"), new { @class = "form-control" })

                    @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model=>model.Description,5,50, new {htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.IsDeleted, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
             
                   

                    @Html.DropDownList("IsDeleted", new SelectList(new List<Object> {
                                                                                   new { value="False", text="False"},
                                                                                   new { value="True",text="True" }
                                                                                
                                                                                  }, "value", "text"), new { @class = "form-control" })




                    @Html.ValidationMessageFor(model => model.IsDeleted, "", new { @class = "text-danger" })
            
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" id="btnSave" class="btn btn-primary" />
            </div>
        </div>
    </div>
}


<script>

    $(function(){
    var frmProjects = $('#frmProjects').validate({
        // rule for validation
        rules:
            {
                Name:
                    {
                     required:true
                    },
                ClientName:
                    {
                     required:true
                    },

           
                Status: {
                    required:true
                },

                IsDeleted: {
                    required:true
                }




        },

        //message for validation

        messages: {

            Name: {
                required:"Please  enter a valid project name."
            },

            ClientName: {
                required:"Please enter a client name."
            },
        },

        // Do not change code below
        errorPlacement: function (error, element) {
            error.insertAfter(element.parent());
        },
        invalidHandler: function (event, validator) {
            warnUserForFormPostError();
        }



    });

    });
    warnUserForFormPostError = function () {

        //alert("fill out all the blanks");
        $.SmartMessageBox({
            title: "Error",
            content: "<b>There are some error(s) in form with red back ground. Please correct them before saving<b>",
            buttons: '[Ok]'

        }, function (ButtonPressed) {
            if (ButtonPressed == "Ok") {

            }
        });
    };
</script>

