@using Microsoft.AspNet.Identity
@model List<ProjectManagerApp.Models.DAL.Output.LogFiltered>

@{
    ViewBag.Title = "Logshistory";
   
}

@Styles.Render("~/Content/bootstrap-dialog-css")






<div id="divLoader" class="modalPopUpBackground loadingCursor" style="display:none; position:absolute;">

    <img src="~/Images/ajax-loader.gif" />
</div>
<br />
<br />
<h2>Logs History </h2>
<br />

<div class="filter">

@using (Ajax.BeginForm("GetDeveloperLogResultSheetByFilter", "Home", new AjaxOptions
{
    HttpMethod = "GET",
    InsertionMode = InsertionMode.Replace,
    UpdateTargetId = "tblDeveloperLogList",
    LoadingElementId = "divLoader"
}))
{
    <div class="row">
        <div class="col-md-3">
            <div class="form-group">
                @Html.DropDownList("projectId", new SelectList(ViewBag.Projects, "id", "Name"), "All", new { @class = "form-control", id = "dropdown" })

            </div>
        </div>
        <div class="col-md-2">From</div>
        <div class="col-md-2">
            @Html.Editor("fromdate", new { htmlAttributes = new { @class = "form-control" } })
        </div>
        <div class="col-md-1">To</div>
        <div class="col-md-2">
            @Html.Editor("todate", new { htmlAttributes = new { @class = "form-control" } })
        </div>
        <div class="col-md-2">
            <div class="form-group">
                <input type="submit" value="Search" id="searchbutton" class="btn btn-primary" onclick="$(this.form).submit();" />
            </div>
        </div>

    </div>

}
</div>

<br/>
<div id="message"></div>

<br />

<div id="tblDeveloperLogList">
    @Html.Partial("_DeveloperLogList")

    

</div>

<br/>


<script>
   // $('.logrowcheckbox').hide();
    // hide bulkeditor
    $('.bulkeditoption').hide();
 
    $('#edit').hide();
    $(document).ready(function() {
        
        $('#fromdate').datetimepicker({
            format: 'YYYY-M-D'
        });

        $('#todate').datetimepicker({
            format: 'YYYY-M-D'
        });
        
        $('*').dblclick(function(e){
            e.preventDefault();
        });
    });
  
 
    // for 20.10

    function ConvertTimeFormat(format, time) {
        var hours = Number(time.match(/^(\d+)/)[1]);
        var minutes = Number(time.match(/:(\d+)/)[1]);
        var AMPM = time.match(/\s(.*)$/)[1];
        if (AMPM == "pm" && hours < 12) hours = hours + 12;
        if (AMPM == "am" && hours == 12) hours = hours - 12;
        var sHours = hours.toString();
        var sMinutes = minutes.toFixed(2);
        if (hours < 10) sHours = "0" + sHours;
        if (minutes < 10) sMinutes = "0" + sMinutes;
        return (sHours + "." + sMinutes);
    };

    //for 20:10
    function ConvertTimeFormat1(format, time) {
        var hours1 = Number(time.match(/^(\d+)/)[1]);
        var minutes1 = Number(time.match(/:(\d+)/)[1]);
        var AMPM1 = time.match(/\s(.*)$/)[1];
        if (AMPM1 == "pm" && hours1 < 12) hours1 = hours1 + 12;
        if (AMPM1 == "am" && hours1 == 12) hours1 = hours1 - 12;
        var sHours1 = hours1.toString();
        var sMinutes1 = minutes1.toFixed(2);
        if (hours1 < 10) sHours1 = "0" + sHours1;
        if (minutes1 < 10) sMinutes1 = "0" + sMinutes1;

        return (sHours1 + ":" + sMinutes1);
    };


    // count the number of records we want to bulk edit or delete


    var selectedlogid = [];


    var description, projectname, duration, workstime, worketime, date, logid, projectid;

    var developerid = @HttpContext.Current.User.Identity.GetUserId();


    // for deleting specific log columns from database
    function deletebuttonclick(ob) {
      
        BootstrapDialog.show({
            title: 'Log Delete',
            message: 'Are you sure you want to delete it?',
            draggable: true,
            buttons: [{
                cssClass:'btn-primary',
                label: 'Yes',
                action: function(dialog) {
                    logid = $(ob).closest("tr").find(".logid").val();             
                    var url = '/API/Log/GetSeletedLogsDelete';
                    $.get(url, { id: logid }, function(data) {
                        console.log("successfully deleted");
                        var url='/Home/GetTodaysLog';
                        $('#tblDeveloperLogList').load('/Home/GetDeveloperLogResultSheetByFilter');
                        $('#message').html('<div class="alert alert-success"> <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a> Log Record Deleted Successfully </div>');
                    });
                    
                    dialog.close();                  
                }
            }, {
                cssClass:'btn-warning',
                label: 'Close',
                action: function(dialog) {
                    dialog.close();
                }
            }]
        });
    }
    // for editing specific log columns from database
    function editbuttonclick(ob) {
      
     
        BootstrapDialog.show({
            title: 'Log Edit',
            message: 'Are you sure you want to edit it?',
            draggable: true,
            buttons: [{
                cssClass:'btn-primary',
                label: 'Yes',
                action: function(dialog) {

                    logid = $(ob).closest("tr").find(".logid").val();
                    description = $(ob).closest("tr").find(".description").text(); // Finds the closest row <tr> // Gets a descendent with class="nr"    // Retrieves the text within <td>
                    projectname = $(ob).closest("tr").find(".projectname").text();
                    duration = $(ob).closest("tr").find(".duration").text();
                    workstime = $(ob).closest("tr").find(".workstime").text();
                    worketime = $(ob).closest("tr").find(".worketime").text();
                    date = $(ob).closest("tr").find(".date").text();
                    dialog.close();
                    editlog(logid, description, projectname, duration, workstime, worketime, date, developerid);
                }
            }, {
                cssClass:'btn-warning',
                label: 'Close',
                action: function(dialog) {
                    dialog.close();
                }
            }]
        }); 
        
       
    }

  
    var count = 0;

    // for checking all the log columns checked
    function check(obj) {
      
              if(obj.checked){
              var logid = $(obj).closest("tr").find(".logid").val();             
              selectedlogid.push(logid);
              console.log("Again checked")
              console.log("push id",logid);
                }
            
                 
        else {    
                  var logid = $(obj).closest("tr").find(".logid").val();
                    var index=selectedlogid.indexOf(logid);
                    if(index>-1){
                        selectedlogid.splice(index,1);
                    }
                    selectedlogid.join(",");
                    count++;
                    console.log("pop id",logid);

                }
           
        console.log("selectedlogid length:",selectedlogid.length);
        // alert(count);
    }

    


    // for editing logs

    function editlog(logid, description, projectname, duration, workstime, worketime, date, developerid) {
        

        dialogAddItem = new BootstrapDialog({
            title: 'Are you sure you want to edit it?',
            message:
                '<div class="modal-bodydata">' +
                         //first row
                    '<div class="row">' +
                    '<div class="col-md-2 form-group">Description</div>'+
                    '<div class="col-md-6">' +
                    '<textarea class="form-control" id="editdescription">'+description+'</textarea>'+
                    '</div>' +
                    '<div class="col-md-4">' +
                    '<select id="projects" class="form-control">' +
                    '</select>' +
                    '</div>' +
                    '</div>' +
                    '<br/>' +

                    //second row

                    '<div class="row">' +
                     '<div class="col-md-2">Start Time</div>'+
                    '<div class="col-md-4">' +
                     '<div class="form-group">' +
                    '<div class="input-group date" id="datetimepicker1" style="width:150px">' +
                    '<input type="text" class="form-control" value="' + workstime + '" id="editworkstime" />' +
                    '<span class="input-group-addon">' +
                    '<span class="glyphicon glyphicon-time"></span>' +
                    '</span>' +
                    '</div>' +
                    '</div>' +
                    '</div>' +
                     '<div class="col-md-2">End Time</div>'+
                    '<div class="col-md-4">' +
                    '<div class="form-group">' +
                    '<div class="input-group date" id="datetimepicker2" style="width:150px">' +
                    '<input type="text" class="form-control" value="' + worketime + '" id="editworketime" />' +
                    '<span class="input-group-addon">' +
                    '<span class="glyphicon glyphicon-time"></span>' +
                    '</span>' +
                    '</div>' +
                    '</div>' +
                    '</div>' +
                    '</div>' +
                    '<br/>' +

                    //third row

                    '<div class="row">' +
                    '<div class="col-md-2">Duration</div>'+
                    '<div class="col-md-3">' +
                    '<input type="text" class="form-control" value="' + duration + '" id="editduration" readonly="readonly"  />' +
                    '</div>' +
                     '<div class="col-md-2">Date</div>'+
                    '<div class="col-md-5">' +
                    '<div class="form-group">' +
                    '<div class="input-group date" id="datetimepicker3" style="width:150px">' +
                    '<input type="text" class="form-control" value="' + date + '" id="editdate" />' +
                    '<span class="input-group-addon">' +
                    '<span class="glyphicon glyphicon-calendar"></span>' +
                    '</span>' +
                    '</div>' +
                    '</div>' +
                    '</div>' +
                    '<div class="col-md-3">' +
                    '</div>' +
                    '</div>',
            onshow: function(dialogRef) {
                //   alert('Dialog is popping up, its message is ');
            },
            onshown: function(dialogRef) {
                
                $('#datetimepicker1').datetimepicker({
                    format: 'h:mm a'

                });

                $('#datetimepicker2').datetimepicker({
                    format: 'h:mm a'

                });
              
                $('#editworkstime').datetimepicker({
                    format: 'h:mm a'
                });
                $('#editworketime').datetimepicker({
                    format: 'h:mm a'
                });
                $('#editdate').datetimepicker({
                    format:'M/D/YYYY'
                });

                $('#datetimepicker3').datetimepicker({

                    format:'M/D/YYYY'
                });
                getprojectname();
                                     
                $('#editworkstime').focusout(function () {
                    var starttime = parseFloat(ConvertTimeFormat("24", $('#editworkstime').val()));
                    var endtime = parseFloat(ConvertTimeFormat("24", $('#editworketime').val()));

                    console.log("starttime",starttime);

                    console.log("endtime",endtime);

                    var workstime = starttime.toFixed(2).split('.');
                    var worketime = endtime.toFixed(2).split('.');
                    var shours = parseInt(workstime[0]);
                    var sminute = parseInt(workstime[1]);
                    var ehours = parseInt(worketime[0]);
                       
                    var eminute = parseInt(worketime[1]);
          
                    var hdiff = ehours - shours;
                    var mdiff = eminute - sminute;

                    if (endtime > starttime) {

                        if (mdiff<0) {
                            mdiff = mdiff + 60;
                            hdiff = hdiff - 1;
                            $('#editduration').val(hdiff + ":" + mdiff);
                        }
                        else {
                            $('#editduration').val(hdiff + ":" + mdiff);
                        }

                    }
                    else if (endtime == starttime) {
                        
                        $('#editduration').val('');
                    }

           
                    else {
                            
                     
                        $('#editduration').val('');
                    }

                });

                $('#editworketime').focusout(function () {
                    var starttime = parseFloat(ConvertTimeFormat("24", $('#editworkstime').val()));
                    var endtime = parseFloat(ConvertTimeFormat("24", $('#editworketime').val()));

                    var workstime = starttime.toFixed(2).split('.');
                    var worketime = endtime.toFixed(2).split('.');
                    var shours = parseInt(workstime[0]);
                    var sminute = parseInt(workstime[1]);
                    var ehours = parseInt(worketime[0]);
                       
                    var eminute = parseInt(worketime[1]);

                    var hdiff = ehours - shours;
                    var mdiff = eminute - sminute;

                    if (endtime > starttime) {
                        if (mdiff < 0) {
                            mdiff = mdiff + 60;
                            hdiff = hdiff - 1;
                            $('#editduration').val(hdiff + ":" + mdiff);
                        }
                        else {
                            $('#editduration').val(hdiff + ":" + mdiff);
                        }
                    }


                     if (endtime == starttime) {
                       
                        $('#editduration').val('');
                    }

                    if(starttime>endtime) {
                      
                        $('#editduration').val('');
                    }

                });
                
           


            },
            draggable: true,
            buttons: [
            {
                label: 'Apply',
                cssClass: 'btn-success',
                action: function(dialog) {

                    
                  

                    var description = $('#editdescription').val();
                    var edate = $('#editdate').val();
                    var projectid = $('#projects option:selected').val();
                    var workstime=$('#editworkstime').val();
                    var worketime=$('#editworketime').val();
                    var duration=$('#editduration').val();
                
                

                    if (description !== "" && duration !== "" && workstime !== "" && worketime !== "" && edate !== "") 
                    {

                    
                        var url='/API/Log/GetTodayLogTimeCheck';
                        $.get(url,{developerid:developerid,starttime:workstime,endtime:worketime,date:date},function(result,status){
                            console.log(result,status);
                            var len = result.length;
                            console.log("length:",len);

                            if(len>1)
                            {
                               alert("There is already log saved  for this timeline.So enter correct time line");
                            
                            }

                            else
                            {
					
                                var html = new Array();
                                html.push('<logs>');
                                html.push('<LineItem ');
                                html.push('Id="' + logid + '"');
                                html.push('D="' + description + '"');
                                html.push('pr="' + projectid + '"');
                                html.push('wst="' + workstime + '"');
                                html.push('wet="' + worketime + '"');
                                html.push('d="' + duration + '"');
                                html.push('date="' + edate + '"');
                                html.push('did="' + developerid + '"');
                                html.push('></LineItem>');
                                html.push('</logs>');
                                console.log(html.join(''));
                                var editlogXML = html.join(' ');
                    
                                var json = '{"editlogXML":' + JSON.stringify(editlogXML) + '}';
                                console.log(json);

                                //console.log(json);
                                $.ajax({
                                    type: 'POST',
                                    url: '/API/Log/GetLogsUpdate',
                                    data: json,
                                    dataType: 'json',
                                    contentType: 'application/json; charset=utf-8',
                                    success: function(data) {
                                        $('.alert-danger').hide();
                                        $('#tblDeveloperLogList').load('/Home/GetDeveloperLogResultSheetByFilter');
                                        $('#message').html('<div class="alert alert-success"> <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a> Log Record Updated  Successfully </div>');
                           
                           
                                    },
                                    error: function() {

                                        $('.alert-success').hide();
                          
                                        $('#message').html('<div class="alert alert-danger"> <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a> something went wrong while  saving. try again!!</div>');
                                    }
                                });					
                            }

                        });

                        dialog.close();

                    }

                    else if(duration==""){
                        alert("Please enter correct timeline before saving(Work start time should be less than work end time).")

                    }
                    else{
                        alert("Fill out all the blanks before applying for saving");
                    }
                }

            
            },{
                cssClass:'btn-warning',
                label: 'Close',
                action: function(dialog) {
                    dialog.close();
                }
            }
            ]
        });

        dialogAddItem.open();

     
    }


    //loading projectsname in dropdown
    function getprojectname() {
        url= '/API/Log/GetAllProjectName';
        var id=@HttpContext.Current.User.Identity.GetUserId();

        $.get(url,{developerid:id},function(data){
            console.log(data);
            var options = [];
            for (var i = 0; i < data.length; i++) {
                options.push('<option value="',
                    data[i].Id, '">',
                    data[i].Name, '</option>');
            }
            $("#projects").html(options.join(''));
        });


    }


    // functionality for bulkedit and bulkdelete

    function bulkcheck(ob) {

        if ($(ob).is(':checked')) {
            $(".table-striped input[type=checkbox]").each(function () {
                 $(this).prop("checked", true);
                    check(this);
                    $('.bulkeditoption').show();

                
            });

        } else {
            $(".table-striped  input[type=checkbox]").each(function () {
                $(this).prop("checked", false);
                var logid = $(this).closest("tr").find(".logid").val();
                selectedlogid.pop(logid);
                console.log("selectedlog pop id:",selectedlogid);
                count--;
                $('.bulkeditoption').hide();
            });
        }

    

    }

    function bulkeditor(ob) {

        BootstrapDialog.show({
            title: 'Log Delete',
            message: 'Are you sure you want to bulk delete it?',
            draggable: true,
            buttons: [{
                cssClass:'btn-primary',
                label: 'Yes',
                action: function(dialog) {
                    var url = '/API/Log/GetBulkLogDelete';
                    var developerid = @HttpContext.Current.User.Identity.GetUserId();
                    console.log("selectedlogid 1111:", selectedlogid);
                    $.get(url, { logids: selectedlogid.toString(), developerid: developerid }, function(data) {
                        console.log("success");
                        $('#tblDeveloperLogList').load('/Home/GetDeveloperLogResultSheetByFilter');

                    });

                    dialog.close();
                  
                }
            }, {
                cssClass:'btn-warning',
                label: 'Close',
                action: function(dialog) {
                    dialog.close();
                }
            }]
        });

    }



    $(function(){
   
        setTimeout(function () {
            $("#searchbutton").trigger("click");
            $("#divLoader").addClass("modalPopUpBackground").addClass("loadingCursor");
        }, 1);
   
    });



</script>






