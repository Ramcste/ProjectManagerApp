@using Microsoft.AspNet.Identity
@*@using ProjectManagerApp.Models.DAL.Output.Projects*@

@model List<ProjectManagerApp.Models.DAL.Output.LogFiltered>

@{
    ViewBag.Title = "Logshistory";
   
}

@Styles.Render("~/Content/bootstrap-dialog-css")


<h2>Logs History</h2>

<div class="filter">

@using (Ajax.BeginForm("GetDeveloperLogResultSheetByFilter", "Home", new AjaxOptions
{
    HttpMethod = "GET",
    InsertionMode = InsertionMode.Replace,
    UpdateTargetId = "tblDeveloperLogList",
    LoadingElementId = "divLoader"
}))
{
    <div class="row">
        <div class="col-md-3">
            <div class="form-group">
                @Html.DropDownList("projectId", new SelectList(ViewBag.Projects, "id", "Name"), "All", new { @class = "form-control", id = "dropdown" })

            </div>
        </div>
        <div class="col-md-2">From</div>
        <div class="col-md-2">
            @Html.Editor("fromdate", new { htmlAttributes = new { @class = "form-control" } })
        </div>
        <div class="col-md-1">To</div>
        <div class="col-md-2">
            @Html.Editor("todate", new { htmlAttributes = new { @class = "form-control" } })
        </div>
        <div class="col-md-2">
            <div class="form-group">
                <input type="submit" value="Search" id="searchbutton" class="btn btn-default" onclick="$(this.form).submit();" />
            </div>
        </div>

    </div>

}
</div>

<h2>Log History</h2>

<br/>


<div id="tblDeveloperLogList">
    @Html.Partial("_DeveloperLogList")

    

</div>


<br/>
<br/>


@Scripts.Render("~/bundles/jqueryajaxform")
@Scripts.Render("~/bundles/datetimepicker")




<script>
   // $('.logrowcheckbox').hide();
    // hide bulkeditor
   // $('.bulkeditoption').hide();

   

    $('#edit').hide();
    $(document).ready(function() {
        
        $('#fromdate').datetimepicker({
            format: 'YYYY-M-D'
        });

        $('#todate').datetimepicker({
            format: 'YYYY-M-D'
        });
    });
  

    // count the number of records we want to bulk edit or delete


    var selectedlogid = [];


    var description, projectname, duration, workstime, worketime, date, logid, projectid;

    var developerid = @HttpContext.Current.User.Identity.GetUserId();


    // for deleting specific log columns from database
    function deletebuttonclick(ob) {
        var con = confirm("Are you sure want to delete it?");
        logid = $(ob).closest("tr").find(".logid").val();
        console.log(logid);

        if (con == true) {

            var url = '/API/Log/GetSeletedLogsDelete';
            $.get(url, { id: logid }, function(data) {
                location.reload();

            });

        } else {
            console.log(logid);
        }

    }

    // for editing specific log columns from database
    function editbuttonclick(ob) {
     
        var result = confirm("Are you sure you want to edit it?");

        if (result == true) {
           
            logid = $(ob).closest("tr").find(".logid").val();
            description = $(ob).closest("tr").find(".description").text(); // Finds the closest row <tr> // Gets a descendent with class="nr"    // Retrieves the text within <td>
            projectname = $(ob).closest("tr").find(".projectname").text();
            duration = $(ob).closest("tr").find(".Duration").text();
            workstime = $(ob).closest("tr").find(".workstime").text();
            worketime = $(ob).closest("tr").find(".worketime").text();
            date = $(ob).closest("tr").find(".date").text();

            editlog(logid, description, projectname, duration, workstime, worketime, date, developerid);
           
            //console.log("description",description);
            //console.log("projectname",date);
          
        }
        //  alert(logid+""+ description +""+projectname+""+ duration+""+ workstime+""+ worketime+""+ date+""+ developerid);

      
    }

    // for deleting specific columns selected
    function editor(ob) {
        var option = ob.value;
        console.log(option);

        if (option == 1) {
            var con = confirm("Are you sure want to delete it?");
            logid = $(ob).closest("tr").find(".logid").val();
            //console.log(logid);

            if (con == true) {

                var url = '/API/Log/GetSeletedLogsDelete';
                $.get(url, { id: logid }, function(data) {
                    console.log("successfully deleted");
                    location.reload();
                });

            } else {
                //console.log(logid);
            }

        } else if (option == 0) {


        }

    }


    var count = 0;

    // for checking all the log columns checked
    function check(obj) {
      
              if(obj.checked){
              var logid = $(obj).closest("tr").find(".logid").val();             
              selectedlogid.push(logid);
              console.log("Again checked")
              console.log("push id",logid);
                }
            
                 
        else {    
                  var logid = $(obj).closest("tr").find(".logid").val();
                    var index=selectedlogid.indexOf(logid);
                    if(index>-1){
                        selectedlogid.splice(index,1);
                    }
                    selectedlogid.join(",");
                    count++;
                    console.log("pop id",logid);
              

                }
            

   //   });
        console.log("selectedlogid length:",selectedlogid.length);
        // alert(count);
    }

    // for confirmation to delete recors or not


    // for editing logs

    function editlog(logid, description, projectname, duration, workstime, worketime, date, developerid) {
        //  alert(description);
        //  alert(date);
        //  alert(projectid);

        dialogAddItem = new BootstrapDialog({
            title: 'Are you sure you want to edit it?',
            message:
                '<div class="modal-bodydata">' +
                    //first row
                    '<div class="row">' +
                    '<div class="col-md-8">' +
                    '<input type="text" class="form-control" id="editdescription" value="' + description + '"   />' +
                    '</div>' +
                    '<div class="col-md-4">' +
                    '<select id="projects" class="form-control">' +
                    //'<option>' + projectname + '</option>' +
                    '</select>' +
                    '</div>' +
                    '</div>' +
                    '<br/>' +

                    //second row

                    '<div class="row">' +
                    '<div class="col-md-3">' +
                    '<label class="form-control" >' + "Date" + '</label>' +
                    '</div>' +
                    '<div class="col-md-6">' +
                    '<div class="form-group">' +
                    '<div class="input-group date" id="datetimepicker3" style="width:150px">' +
                    '<input type="text" class="form-control" value="' + date + '" id="editdate" />' +
                    '<span class="input-group-addon">' +
                    '<span class="glyphicon glyphicon-calendar"></span>' +
                    '</span>' +
                    '</div>' +
                    '</div>' +
                    '</div>' +
                    '<div class="col-md-3">' +
                    '</div>' +
                    '</div>',
            onshow: function(dialogRef) {
                //   alert('Dialog is popping up, its message is ');
            },
            onshown: function(dialogRef) {
                $('#datetimepicker3').datetimepicker({

                    format:'M/D/YYYY'
                });
                getprojectname();

            },
            draggable: true,
            buttons: [
            {
                label: 'Apply',
                cssClass: 'btn-success',
                action: function(dialog) {

                    var description = $('#editdescription').val();
                    var edate = $('#editdate').val();
                    var projectid = $('#projects option:selected').val();

                    var html = new Array();
                    html.push('<logs>');
                    html.push('<LineItem ');
                    html.push('Id="' + logid + '"');
                    html.push('D="' + description + '"');
                    html.push('pr="' + projectid + '"');
                    html.push('wst="' + workstime + '"');
                    html.push('wet="' + worketime + '"');
                    html.push('d="' + duration + '"');
                    html.push('date="' + edate + '"');
                    html.push('did="' + developerid + '"');
                    html.push('></LineItem>');
                    //console.log(projectid);

                    html.push('</logs>');
                    console.log(html.join(''));
                    var editlogXML = html.join(' ');
                    
                    var json = '{"editlogXML":' + JSON.stringify(editlogXML) + '}';
                    console.log(json);

                    //console.log(json);
                    $.ajax({
                        type: 'POST',
                        url: '/API/Log/GetLogsUpdate',
                        data: json,
                        dataType: 'json',
                        contentType: 'application/json; charset=utf-8',
                        success: function(data) {
                            alert("Data Updated Successfully");
                            
                            location.reload();
                           
                        },
                        error: function() {
                            alert("something went wrong while saving. try again!!");
                        }
                    });


                    dialog.close();

                }
            }
            ]
        });

        dialogAddItem.open();

     
    }


    //loading projectsname in dropdown
    function getprojectname() {
        url= '/API/Log/GetAllProjectName';
        var id=@HttpContext.Current.User.Identity.GetUserId();

        $.get(url,{developerid:id},function(data){
            console.log(data);
            var options = [];
            for (var i = 0; i < data.length; i++) {
                options.push('<option value="',
                    data[i].Id, '">',
                    data[i].Name, '</option>');
            }
            $("#projects").html(options.join(''));
        });


    }


    // functionality for bulkedit and bulkdelete

    function bulkcheck(ob) {

        if ($(ob).is(':checked')) {
            $(".table-striped input[type=checkbox]").each(function () {
                 $(this).prop("checked", true);
                    check(this);
                    $('.bulkeditoption').show();

                
            });

        } else {
            $(".table-striped  input[type=checkbox]").each(function () {
                $(this).prop("checked", false);
                var logid = $(this).closest("tr").find(".logid").val();
                selectedlogid.pop(logid);
                console.log("selectedlog pop id:",selectedlogid);
                count--;
                $('.bulkeditoption').hide();
            });
        }

    

    }

    function bulkeditor(ob) {

        var option = ob.value;


        //if (option == 0) {
        //    var response = confirm("Are you sure you want to bulk edit it?");
        //    if (response == true) {
        //        alert("please check the no of items you want to edit it from log records.");
        //    }
        //}

        if (option == 1) {
            var response1 = confirm("Are you sure you want to bulk delete it?");
            if (response1 == true) {



                var url = '/API/Log/GetBulkLogDelete';
                var developerid = @HttpContext.Current.User.Identity.GetUserId();

                 console.log("selectedlogid 1111:", selectedlogid);
                $.get(url, { logids: selectedlogid.toString(), developerid: developerid }, function(data) {

                    //alert(data);
                    console.log("success");
                   location.reload();
                });
            } else {
                // console.log("selected logid length:", selectedlogid.toString());
            }
        }


    }




</script>



<style>
    .logtable{
        border: 1px solid #666;   
        width: 100%;
    }
    td {
        background: #f8f8f8; 
        font-weight: bold;    
        padding: 2px;
    }

      thead {
    background-color: #4CAF50;
    height:50px;
    color: black;
}

      .highlight {
         background-color: red;
     }
     
</style>


