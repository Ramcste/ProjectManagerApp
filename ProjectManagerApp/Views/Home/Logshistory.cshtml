@using Microsoft.AspNet.Identity
@model ProjectManagerApp.Models.DAL.Output.Projects
@{
    ViewBag.Title = "Logshistory";
}

@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/bundles/datetimepicker")
@Scripts.Render("~/bundles/bootstrap")
@Styles.Render("~/bundles/bootstrap")
@Styles.Render("~/Content/bootstrap-dialog-css")

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.4.0/css/font-awesome.min.css">

<h2>Logs History</h2>
<div class="menu row">
    <div class="col-md-3">
        <div class="form-group">
            @Html.DropDownListFor(model => model.Id, new SelectList(ViewBag.Projects, "id", "Name"),"All", new {@class = "form-control", id = "dropdown"})

        </div>
    </div>
    <div class="col-md-2">From</div>
    <div class="col-md-2">
        <div class="form-group">
            <div class="input-group date" id='datetimepicker'>
                <input type='text' class="form-control" id='fromdate'/>
                <span class="input-group-addon">
                    <span class="glyphicon glyphicon-calendar"></span>
                </span>
            </div>
        </div>
    </div>
    <div class="col-md-1">To</div>
    <div class="col-md-2">
        <div class="form-group">
            <div class="input-group date" id='datetimepicker1'>
                <input type='text' class="form-control" id='todate'/>
                <span class="input-group-addon">
                    <span class="glyphicon glyphicon-calendar"></span>
                </span>
            </div>
        </div>
    </div>
    <div class="col-md-2">
        <div class="form-group">
            <input type="submit" value="Search" id="searchbutton"/>
        </div>
    </div>
   
</div>


<h2>Log History</h2>
<div class="projectlogedit row">
    <div class="col-md-2">
        <div id="bulkeditoroption">

            <input type="checkbox" class="logrowcheckbox" onclick="bulkcheck(this);" />
            <select class="bulkeditoption" onchange="bulkeditor(this);">

                <option>Select Option</option>

                @*<option value="0" id="bulkedit">Bulk Edit</option>*@

                <option value="1" id="bulkdelete"> Bulk Delete</option>

            </select>


        </div>
    </div>
    <div class="col-md-10">
       
    </div>
 
</div>

<br/>

<div id="logshistory">
       <table class="logtable" style="width:100%">
           <thead>
               <tr>

                   <td> Option</td>
                   <td></td>
                   <td> Description</td>
                   <td> Project Name</td>
                   <td> Duration</td>
                   <td> WorkStartTime</td>
                   <td> WorkEndTime</td>
                   <td> Date</td>
                   <td> Operation</td>
               </tr>
           </thead>
           <tbody>

           </tbody>
       </table>
 
</div>
<br/>
<br/>

<script>

    // hide bulkeditor
    $('.bulkeditoption').hide();

    $('#edit').hide();
    $(document).ready(function() {
        $('#datetimepicker').datetimepicker({
            format: 'YYYY-M-D'

        });

        $('#datetimepicker1').datetimepicker({
            format: 'YYYY-M-D'

        });

        $('#datetimepicker2').datetimepicker({
            format: 'YYYY-M-D'

        });

    });



    // method for loading loghistory according to projectid by default

    function LoadHistoryDefault()
    {
        var did = @HttpContext.Current.User.Identity.GetUserId();
        var pid=($('#dropdown option:selected').val() == "")? 0 :$('#dropdown option:selected').val();
        var fromdate = ($('#fromdate').val() == "") ? null : $('#fromdate').val();
        var todate = ($('#todate').val() == "") ? null : $('#todate').val();
        //  alert(pid);
        //alert(did);

        //  var url = '/API/Log/GetLogHistoryAscProjectId';
        //$.get(url, { developerid: did,projectid:pid}, function(data) {
        var url = '/API/Log/GetLogsHistory';
        $.get(url, { id: did, projectid: pid, fromdate: fromdate, todate: todate }, function(data) {
            console.log(data);
            var report = "";
            var len = data.length;
            for (var i = 0; i < len; i++) {
                report += '<tr>' +
                    '<td>' + '<input type="checkbox" class="rowcheckbox" onclick="check(this);"/>' + ' </td>' +
                    '<td>' + '<input type="hidden" class="logid" value="' + data[i].Id + '"/>' + '</td>' +
                    '<td class="description">' + data[i].Description + '</td>' +
                    // '<td class="projectid">' + data[i].ProjectId + '</td>' +
                    '<td class="projectname">' + data[i].Name + '</td>' +
                    '<td class="duration">' + data[i].Duration + '</td>' +
                    '<td class="workstime">' + data[i].WorkStartTime + '</td>' +
                    '<td class="worketime">' + data[i].WorkEndTime + '</td>' +
                    '<td class="date">' + data[i].Date + '</td>' +
                    '<td>' +
                    '<span style="display:inline;">' +
                    '<input type="button" id="editbutton" onclick="editbuttonclick(this);" value="Edit"/>' +
                    '<input type="button" id="deletebutton" onclick="deletebuttonclick(this);" value="Delete"/>' +
                    '<span>'
                    + '</td>' +
                    '</tr>';
            }

            if (report != "") {
                $('#logshistory .logtable').append(report);
                console.log("success");
                $('.logrowcheckbox').show();

            } else {
                console.log("no logs to show");
                $('.logrowcheckbox').hide();
                $('#logshistory .logtable').hide();
                alert("no data to show");

            }


        });
    }




    //Get loghistory from database according to developerid

    $(function() {
        LoadHistoryDefault();
    });



    // for search button click operation

    $(function() {
        $('#searchbutton').click(function() {

            var did = @HttpContext.Current.User.Identity.GetUserId();
            var pid = $('#dropdown option:selected').val();
            var fromdate = ($('#fromdate').val() == "") ? null : $('#fromdate').val();
            var todate = ($('#todate').val() == "") ? null : $('#todate').val();

           
            if(true) {
                // to remove exisiting records of table
                $('.logtable tr').remove();

                var url = '/API/Log/GetLogsHistory';
                $.get(url, { id: did, projectid: pid, fromdate: fromdate, todate: todate }, function(data) {
                    console.log(data);
                    var report = "";
                    var len = data.length;
                    for (var i = 0; i < len; i++) {
                        report += '<tr>' +
                            '<td>' + '<input type="checkbox" class="rowcheckbox" onclick="check(this);"/>' + ' </td>' +
                            '<td>' + '<input type="hidden" class="logid" value="' + data[i].Id + '"/>' + '</td>' +
                            '<td class="description">' + data[i].Description + '</td>' +
                            '<td class="projectname">' + data[i].Name + '</td>' +
                            '<td class="duration">' + data[i].Duration + '</td>' +
                            '<td class="workstime">' + data[i].WorkStartTime + '</td>' +
                            '<td class="worketime">' + data[i].WorkEndTime + '</td>' +
                            '<td class="date">' + data[i].Date + '</td>' +
                            '<td>' +
                            '<span style="display:inline;">' +
                            '<input type="button" id="editbutton" onclick="editbuttonclick(this);" value="Edit"/>' +
                            '<input type="button" id="deletebutton" onclick="deletebuttonclick(this);" value="Delete"/>' +
                            '<span>' +
                            '</td>' +
                            '</tr>';
                    }

                    if (report != "") {
                        $('#logshistory .logtable').append(report);
                        console.log("success");
                        $('.logrowcheckbox').show();

                    } else {
                        console.log("no data to show");
                        $('.logrowcheckbox').hide();
                        $('#logshistory .logtable').hide();
                        alert("there is no records for this search!!");

                    }


                });
            }


        });
    });


    // count the number of records we want to bulk edit or delete


    var selectedlogid = [];


    var description, projectname, duration, workstime, worketime, date, logid, projectid;

    var developerid = @HttpContext.Current.User.Identity.GetUserId();


    // for deleting specific log columns from database
    function deletebuttonclick(ob) {
        var con = confirm("Are you sure want to delete it?");
        logid = $(ob).closest("tr").find(".logid").val();
        console.log(logid);

        if (con == true) {

            var url = '/API/Log/GetSeletedLogsDelete';
            $.get(url, { id: logid }, function(data) {
                location.reload();

            });

        } else {
            console.log(logid);
        }

    }

    // for editing specific log columns from database
    function editbuttonclick(ob) {

        var result = confirm("Are you sure you want to edit it?");

        if (result == true) {


            logid = $(ob).closest("tr").find(".logid").val();
            description = $(ob).closest("tr").find(".description").text(); // Finds the closest row <tr> // Gets a descendent with class="nr"    // Retrieves the text within <td>
            projectname = $(ob).closest("tr").find(".projectname").text();
            duration = $(ob).closest("tr").find(".duration").text();
            workstime = $(ob).closest("tr").find(".workstime").text();
            worketime = $(ob).closest("tr").find(".description").text();
            date = $(ob).closest("tr").find(".date").text();

            editlog(logid, description, projectname, duration, workstime, worketime, date, developerid);
            // alert("edit button clicked");
        }
        //  alert(logid+""+ description +""+projectname+""+ duration+""+ workstime+""+ worketime+""+ date+""+ developerid);

    }

    // for deleting specific columns selected
    function editor(ob) {
        var option = ob.value;
        console.log(option);

        if (option == 1) {
            var con = confirm("Are you sure want to delete it?");
            logid = $(ob).closest("tr").find(".logid").val();
            //console.log(logid);

            if (con == true) {

                var url = '/API/Log/GetSeletedLogsDelete';
                $.get(url, { id: logid }, function(data) {
                    console.log("successfully deleted");
                    location.reload();
                });

            } else {
                //console.log(logid);
            }

        } else if (option == 0) {


        }

    }


    var count = 0;

    // for checking all the log columns checked
    function check(obj) {
        $(".logtable tr").click(function() {
            //$(this).find('td').toggleClass("highlight");

            if ($(".rowcheckbox").is(':checked')) {

                logid = $(this).closest("tr").find(".logid").val();
                selectedlogid.push(logid);
                selectedlogid.join(",");
                count++;

            } else{
                $(this).prop("checked", false);
                logid = $(this).closest("tr").find(".logid").val();
                selectedlogid.pop(logid);
                console.log(logid);
                count--;
               // alert("unchecked");
            }

        });

        // alert(count);
    }

    // for confirmation to delete recors or not


    // for editing logs

    function editlog(logid, description, projectname, duration, workstime, worketime, date, developerid) {
        //  alert(description);
        //  alert(date);
        //  alert(projectid);

        dialogAddItem = new BootstrapDialog({
            title: 'Are you sure you want to edit it?',
            message:
                '<div class="modal-bodydata">' +
                    //first row
                    '<div class="row">' +
                    '<div class="col-md-8">' +
                    '<input type="text" class="form-control" id="editdescription" value="' + description + '"   />' +
                    '</div>' +
                    '<div class="col-md-4">' +
                    '<select id="projects" class="form-control">' +
                    //'<option>' + projectname + '</option>' +
                    '</select>' +
                    '</div>' +
                    '</div>' +
                    '<br/>' +

                    //second row

                    '<div class="row">' +
                    '<div class="col-md-3">' +
                    '<label class="form-control" >' + "Date" + '</label>' +
                    '</div>' +
                    '<div class="col-md-6">' +
                    '<div class="form-group">' +
                    '<div class="input-group date" id="datetimepicker3" style="width:150px">' +
                    '<input type="text" class="form-control" value="' + date + '" id="editdate" />' +
                    '<span class="input-group-addon">' +
                    '<span class="glyphicon glyphicon-calendar"></span>' +
                    '</span>' +
                    '</div>' +
                    '</div>' +
                    '</div>' +
                    '<div class="col-md-3">' +
                    '</div>' +
                    '</div>',
            onshow: function(dialogRef) {
                //   alert('Dialog is popping up, its message is ');
            },
            onshown: function(dialogRef) {
                $('#datetimepicker3').datetimepicker({

                    format:'YYYY-M-D'
                });
                getprojectname();

            },
            draggable: true,
            buttons: [
            {
                label: 'Apply',
                cssClass: 'btn-success',
                action: function(dialog) {

                    var description = $('#editdescription').val();
                    var edate = $('#editdate').val();
                    var projectid = $('#projects option:selected').val();
                    //alert(projectid);
                    // var developerid=@HttpContext.Current.User.Identity.GetUserId();
                    // console.log(description+'   '+editdate+'   '+logid+'   '+projectid+'    '+did);

                    var html = new Array();
                    html.push('<logs>');
                    html.push('<LineItem ');
                    html.push('Id="' + logid + '"');
                    html.push('D="' + description + '"');
                    html.push('pr="' + projectid + '"');
                    html.push('wst="' + workstime + '"');
                    html.push('wet="' + worketime + '"');
                    html.push('d="' + duration + '"');
                    html.push('date="' + edate + '"');
                    html.push('did="' + developerid + '"');
                    html.push('></LineItem>');
                    //console.log(projectid);

                    html.push('</logs>');
                    console.log(html.join(''));
                    var editlogXML = html.join(' ');
                    // var json = sys.Serialization.JavaScriptSerializer.serialize(logXML);
                    var json = '{"editlogXML":' + JSON.stringify(editlogXML) + '}';
                    console.log(json);

                    //console.log(json);
                    $.ajax({
                        type: 'POST',
                        url: '/API/Log/GetLogsUpdate',
                        data: json,
                        dataType: 'json',
                        contentType: 'application/json; charset=utf-8',
                        success: function(data) {
                            alert("Data Updated Successfully");
                            location.reload();
                        },
                        error: function() {
                            alert("something went wrong while  saving. try again!!");
                        }
                    });

                    //   alert("Hello");

                    dialog.close();

                }
            }
            ]
        });

        dialogAddItem.open();

        // alert("Hello there");
    }


    //loading projectsname in dropdown
    function getprojectname() {
        url= '/API/Log/GetAllProjectName';
        var id=@HttpContext.Current.User.Identity.GetUserId();

        $.get(url,{developerid:id},function(data){
            console.log(data);
            var options = [];
            for (var i = 0; i < data.length; i++) {
                options.push('<option value="',
                    data[i].Id, '">',
                    data[i].Name, '</option>');
            }
            $("#projects").html(options.join(''));
        });


    }


    // functionality for bulkedit and bulkdelete

    function bulkcheck(ob) {

        if (selectedlogid.length > 0) {
            $('.bulkeditoption').show();
            check();
        } else {
            //   if((ob).is(!checked)){
            alert("you haven't selected any row so there is nothing to delete");
            // }
        }

    }

    function bulkeditor(ob) {

        var option = ob.value;


        //if (option == 0) {
        //    var response = confirm("Are you sure you want to bulk edit it?");
        //    if (response == true) {
        //        alert("please check the no of items you want to edit it from log records.");
        //    }
        //}

        if (option == 1) {
            var response1 = confirm("Are you sure you want to bulk delete it?");
            if (response1 == true) {



                var url = '/API/Log/GetBulkLogDelete';
                var developerid = @HttpContext.Current.User.Identity.GetUserId();

                // console.log("selectedlogid 1111:", selectedlogid);
                $.get(url, { logids: selectedlogid.toString(), developerid: developerid }, function(data) {

                    //alert(data);
                    console.log("success");
                    location.reload();
                });
            } else {
                // console.log("selected logid length:", selectedlogid.toString());
            }
        }


    }




</script>

<style>
    .logtable{
        border: 1px solid #666;   
        width: 100%;
    }
    td {
        background: #f8f8f8; 
        font-weight: bold;    
        padding: 2px;
    }
      .highlight {
         background-color: red;
     }
     
</style>


