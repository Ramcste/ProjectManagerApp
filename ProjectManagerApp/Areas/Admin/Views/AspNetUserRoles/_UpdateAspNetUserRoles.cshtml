@model ProjectManagerApp.Areas.Admin.Models.AspNetUserRole

@using (Html.BeginForm(null,null,FormMethod.Post,new { id="frmAspNetUserRoles"}))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>AspNetUserRole</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.AspNetUser.Email, "UserId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("UserId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.AspNetUser.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RoleId, "RoleId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("RoleId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.RoleId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<script>

    $(function () {

        var frmAspNetUserRoles = $('#frmAspNetUserRoles').validate({
            //Rules for validation
            rules: {
                Email: {
                    required: true
                },

                UserName: {
                    required: true
                }

            },

            //messsages for validation
            messages: {
                Email: {
                    required: 'Please enter valid email address'
                },

                UserName: {
                    required: 'Please enter valid username'
                }
            },

            // Do not change code below
            errorPlacement: function (error, element) {
                error.insertAfter(element.parent());
            },
            invalidHandler: function (event, validator) {
                warnUserForFormPostError();
            }




        });
    });

    warnUserForFormPostError = function () {

        alert("fill out all the blanks");
        //$.SmartMessageBox({
        //    title: "Error",
        //    content: "<b>There are some error(s) in form with red back ground. Please correct them before saving<b>",
        //    buttons: '[Ok]'

        //}, function (ButtonPressed) {
        //    if (ButtonPressed == "Ok") {

        //    }
        //});
    };
</script>

